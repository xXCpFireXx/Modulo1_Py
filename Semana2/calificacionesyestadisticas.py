# Definir e inicializar variables globales
intento_max: int = 5
intento_actual: int = 0
operacion_exitosa: bool = False

print("\n ----------------- BIENVENIDO -----------------\n")

# Bucle principal con l√≠mite de intentos
while intento_actual < intento_max and not operacion_exitosa:
    intento_actual += 1

    # Variable para la opci√≥n del men√∫
    opcion: str = ""

    # Mostrar el men√∫
    print("------------ MEN√ö ------------\n")
    print("‚úÖ 1. Determinar estado de aprobaci√≥n")
    print("üìä 2. Calcular promedio")
    print("üìà 3. Contar calificaciones mayores que un valor")
    print("üîç 4. Contar calificaciones espec√≠ficas")
    print("üö™ 5. SALIR\n")
    
    # Solicitar la opci√≥n al usuario
    opcion = input("üëâ Ingrese una OPCI√ìN del 1 al 5: \n")
    
    # Reinicia para permitir m√°s intentos
    operacion_exitosa = False
    
    # Opci√≥n 1: Determinar estado de aprobaci√≥n
    if opcion == "1":
        
        print("\n‚úÖ DETERMINAR ESTADO DE APROBACI√ìN")

        # Variable para ingresar la calificaci√≥n a evaluar
        entrada_calificacion: float = 0.0   
        
        try:
            entrada_calificacion = float(input("üëâ Ingrese una CALIFICACI√ìN del 0 al 100: \n"))
            
            if entrada_calificacion >= 0 and entrada_calificacion <= 100:
                
                if entrada_calificacion >= 70: #Condici√≥n minima para obtener APROBADO
                    print("\n‚úÖ APROBADO!!")
                else:
                    print("\n‚ùå !!!REPROBADO!!!")

                operacion_exitosa = True  # Operaci√≥n exitosa

            else:
                print("\n‚ö†Ô∏è ERROR: LA CALIFICACI√ìN DEBE ESTAR ENTRE 0 Y 100.\n")
        except ValueError:
            print("\n‚ö†Ô∏è ERROR: INGRESE UN N√öMERO VALIDO!!.\n")
    
    # Opci√≥n 2: Calcular promedio
    elif opcion == "2":
        
        print("\nüìä CALCULAR PROMEDIO")
        
        lista_calificaciones: list[float] = [] # Lista para guardar las calificaciones
        entrada_calificaciones: str = ""     # Guardar las calificaciones ingresadas separada por coma
        numero_actual: str = ""              # Guarda el car√°cter que es diferente de ","
        
        entrada_calificaciones = input("üëâ Ingrese los N√öMEROS separados por COMAS, por ejemplo (34,56,1,76): \n")
        
        for i in entrada_calificaciones:
            if i != ",":
                numero_actual += i
            else:
                valor: float = float(numero_actual) #Guarda en la variable valor el car√°cter convertido en float
                lista_calificaciones.append(valor)  #Agrega el valor a la lista calificaciones
                numero_actual = ""
                
        
        # Procesar el √∫ltimo n√∫mero
        if numero_actual != "":
                valor: float = float(numero_actual)
                lista_calificaciones.append(valor)
                
        # Calcular
        suma_total: float = 0.0
        cantidad_numeros: int = 0
        promedio: float = 0.0

        for i in lista_calificaciones:
            suma_total += i      # Hace la suma de los n√∫meros de la lista

        cantidad_numeros = len(lista_calificaciones) #Guarda la cantidad de datos que hay en la lista
        promedio = suma_total / cantidad_numeros     #Hace el promedio de las calificaciones

        #Mostrar resultados        
        print(f"\nüìä El PROMEDIO de las CALIFICACIONES {lista_calificaciones} es: {promedio:.2f}")            
        operacion_exitosa = True

    # Opci√≥n 3: Contar calificaciones mayores que un valor
    elif opcion == "3":
        
        print("\nüìà CONTAR CALIFICACIONES MAYORES QUE UN VALOR")
        lista_calificaciones: list[float] = [21,32,78,99,32,3,45,6,78,92,33,45,65,89,67,41] # Lista para guardar las calificaciones
        valor_para_comparar:float = 0.0 # Variable para ingresar el valor para comparar con las otras calificaciones
        contador_mayores:int = 0
        
        valor_para_comparar = float(input("üëâ Ingrese una CALIFICACI√ìN del 0 al 100: \n"))
            
        if valor_para_comparar >= 0 and valor_para_comparar <= 100:
            
            for i in lista_calificaciones:
                if i>valor_para_comparar:
                    contador_mayores += 1

            print(f"\n‚≠ê HAY {contador_mayores} CALIFICACIONES MAYORES QUE {valor_para_comparar} üöÄ\n")           
            operacion_exitosa = True  # Operaci√≥n exitosa
        else:
            print("\n‚ö†Ô∏è ERROR: LA CALIFICACI√ìN DEBE ESTAR ENTRE 0 Y 100.\n")
    
    # Opci√≥n 4: Contar calificaciones espec√≠ficas
    elif opcion == "4":
        
        print("\nüîç CONTAR CALIFICACIONES ESPEC√çFICAS\n")
        lista_calificaciones: list[float] = [] # Lista para guardar las calificaciones
        entrada_calificaciones: str = ""     # Guardar las calificaciones ingresadas separada por coma
        numero_actual: str = ""              # Guarda el car√°cter que es diferente de ","
        calificacion_especifica:float = 0.0  # Guarda la calificaci√≥n especifica
        contador_calificaciones:int = 0
        
        entrada_calificaciones = input("üëâ Ingrese los N√öMEROS separados por COMAS, por ejemplo (34,56,1,76): \n")
        
        for i in entrada_calificaciones:
            if i != ",":
                numero_actual += i
            else:
                valor: float = float(numero_actual)
                lista_calificaciones.append(valor)
                numero_actual = ""
                
        
        # Procesar el √∫ltimo n√∫mero
        if numero_actual != "":
                valor: float = float(numero_actual)
                lista_calificaciones.append(valor)
                
        calificacion_especifica = float(input("\nüëâ Ingrese una CALIFICACI√ìN en ESPEC√çFICO: \n"))
        
        if calificacion_especifica >= 0 and calificacion_especifica <= 100:
            
            #Recorre la lista para buscar cuantas veces esta la calificaci√≥n especifica ingresada
            for i in lista_calificaciones:
                
                if i==calificacion_especifica:
                    contador_calificaciones += 1
                    
            print(f"\n‚≠ê APARECE LA CALIFICACI√ìN {calificacion_especifica} EN LA LISTA {contador_calificaciones} VECES ‚≠ê\n")   
            operacion_exitosa = True  # Operaci√≥n exitosa
        else:
            print("\n‚ö†Ô∏è ERROR: LA CALIFICACI√ìN DEBE ESTAR ENTRE 0 Y 100.\n")
                
    # Opci√≥n 5: Salir
    elif opcion == "5":
        print("\nüö™ ¬°GRACIAS POR USAR EL PROGRAMA!")
        operacion_exitosa = True  # Salida exitosa
        break  # Salir del bucle
    
    # Opci√≥n inv√°lida
    else:
        print("\n‚ö†Ô∏è Error: Ingrese una OPCI√ìN V√ÅLIDA del 1 al 5.!!\n")

    # Verificar si se alcanz√≥ el l√≠mite de intentos
    if intento_actual == intento_max and not operacion_exitosa:
        print("\n‚ö†Ô∏è L√≠mite de INTENTOS alcanzado")
